#!/usr/bin/env python3
import curses
import subprocess

def get_jobs():
    """获取当前用户的 Slurm 任务列表，并解析出字段。"""
    result = subprocess.run(["squeue", "--me"], capture_output=True, text=True)
    lines = result.stdout.strip().split("\n")
    if len(lines) < 2:
        return [], []
    headers = lines[0].split()
    jobid_index = headers.index("JOBID")
    jobs = [line.split(maxsplit=len(headers) - 1) for line in lines[1:]]
    return headers, jobs, jobid_index

def interactive_cancel(stdscr):
    curses.curs_set(0)
    stdscr.clear()
    headers, jobs, jobid_index = get_jobs()
    if not jobs:
        stdscr.addstr(0, 0, "No jobs found.")
        stdscr.refresh()
        stdscr.getch()
        return
    
    selected = 0
    while True:
        stdscr.clear()
        stdscr.addstr(0, 0, "Use UP/DOWN to navigate, C/K to cancel, Q to quit")
        stdscr.addstr(1, 0, "{:<10} {:<10} {:<10} {:<5} {:<3} {:<8} {:<6} {:<10}".format(*headers))
        for idx, job in enumerate(jobs):
            line = "{:<10} {:<10} {:<10} {:<5} {:<3} {:<8} {:<6} {:<10}".format(*job)
            if idx == selected:
                stdscr.attron(curses.A_REVERSE)
                stdscr.addstr(idx + 2, 0, line)
                stdscr.attroff(curses.A_REVERSE)
            else:
                stdscr.addstr(idx + 2, 0, line)
        
        key = stdscr.getch()
        if key == curses.KEY_UP and selected > 0:
            selected -= 1
        elif key == curses.KEY_DOWN and selected < len(jobs) - 1:
            selected += 1
        elif key in (ord('k'), ord('K'), ord('c'), ord('C')):
            job_id = jobs[selected][jobid_index]
            subprocess.run(["scancel", job_id])
            headers, jobs, jobid_index = get_jobs()
            if selected >= len(jobs):
                selected = max(0, len(jobs) - 1)
        elif key in (ord('q'), ord('Q')):
            break
        
        stdscr.refresh()

if __name__ == "__main__":
    curses.wrapper(interactive_cancel)
