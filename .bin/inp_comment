#!/usr/bin/env python3
import re
import sys

# 将.inp文件按照逗号分隔，每个变量一行，便于加注释。
# 方法：
# 0. 读取文件。第一个参数为original_inp_file，第二个参数为manual.txt的路径，第三个参数(0或者1)为是否原位更改
if len(sys.argv) < 3:
    print('Usage: inp_comment path_to_original_input path_to_manual_tex [is_inplace]')
    sys.exit(1)
original_inp_file = sys.argv[1]
manual_path = sys.argv[2]
is_inplace = int(sys.argv[3]) if len(sys.argv) == 4 else False
new_inp_file = original_inp_file if is_inplace else original_inp_file+'.commented'

with open(original_inp_file, 'r') as f:
    lines = f.readlines()
# 1. 将KZ特殊处理。例如，将KZ(1:10)= 1 1 1 0 1 0 4 2 3 2 替换为KZ(1)=1, KZ(2)=1, KZ(3)=1, KZ(4)=0, KZ(5)=1, KZ(6)=0, KZ(7)=4, KZ(8)=2, KZ(9)=3, KZ(10)=2。一共有KZ(1:10), KZ(11:20), KZ(21:30), KZ(31:40), KZ(41:50)五行需要考虑
def process_kz_line(line):
    match = re.match(r'KZ\((\d+):(\d+)\)=\s*(.*)', line)
    if match:
        start, end, values = match.groups()
        values = values.split()[0:int(end)-int(start)+1]
        new_lines = [f'KZ({i})={value}' for i, value in enumerate(values, start=int(start))]
        return ','.join(new_lines) + ',\n'
    return line

processed_lines = []
for line in lines:
    if line.startswith('KZ'):
        processed_lines.append(process_kz_line(line))
    else:
        processed_lines.append(line)

# 2. 查找所有的逗号，每逢逗号单独列做一个，并添加换行符
one_variable_per_line = []
for line in processed_lines:
    if ',' in line:
        variables = line.split(',')
        for variable in variables[:-1]:
            one_variable_per_line.append(variable + ',\n')
        one_variable_per_line.append(variables[-1])
    else:
        one_variable_per_line.append(line + '\n')

# 3. 从manual.txt中查找说明，使用注释（以感叹号开始）加入到该变量之前
# 查找方法：
# 从key=value中获取key作为变量名
# 对变量名，在manual中搜索第一个匹配（行开头为变量名）。然后继续往下搜，直到遇到下一个开头行不为空格、不为百分号的行。这中间的内容就是该变量的说明
with open(manual_path, 'r') as f:
    manual_lines = f.readlines()
commented_lines = []
for line in one_variable_per_line:
    match = re.match(r'(.+)=', line)
    if match:
        variable = match.group(1)
        n_comment_line_found = 0
        for i, manual_line in enumerate(manual_lines):
            if manual_line.lower().startswith(variable.lower()+' '):
                commented_lines.append('! ' + manual_line)
                n_comment_line_found += 1
                for manual_line in manual_lines[i+1:]:
                    if manual_line.strip().startswith('%'):
                        continue
                    if manual_line.startswith(' ') and not '\\texttt{if' in manual_line:
                        commented_lines.append('! ' + manual_line)
                        n_comment_line_found += 1
                    else:
                        break
                break
        if n_comment_line_found == 0:
            print(f'No comment found for {variable}')
    else:
        # not a variable line, but something else, then just record
        pass
    commented_lines.append(line)

# 4. 将结果写入新文件
with open(new_inp_file, 'w') as f:
    f.writelines(commented_lines)

print("Commented file is saved to", new_inp_file)